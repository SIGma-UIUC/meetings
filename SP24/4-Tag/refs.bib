% Encoding: UTF-8

@InCollection{sep-church-turing,
	author       =	{Copeland, B. Jack},
	title        =	{{The Church-Turing Thesis}},
	booktitle    =	{The {Stanford} Encyclopedia of Philosophy},
	editor       =	{Edward N. Zalta and Uri Nodelman},
	howpublished =	{\url{https://plato.stanford.edu/archives/spr2024/entries/church-turing/}},
	year         =	{2024},
	edition      =	{{S}pring 2024},
	publisher    =	{Metaphysics Research Lab, Stanford University}
}

@article{10.1145/321203.321206,
author = {Cocke, John and Minsky, Marvin},
title = {Universality of Tag Systems with P = 2},
year = {1964},
issue_date = {Jan. 1964},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {11},
number = {1},
issn = {0004-5411},
url = {https://doi.org/10.1145/321203.321206},
doi = {10.1145/321203.321206},
abstract = {By a simple direct construction it is shown that computations done by Turing machines can be duplicated by a very simple symbol manipulation process. The process is described by a simple form of Post canonical system with some very strong restrictions.This system is monogenic: each formula (string of symbols) of the system can be affected by one and only one production (rule of inference) to yield a unique result. Accordingly, if we begin with a single axiom (initial string) the system generates a simply ordered sequence of formulas, and this operation of a monogenic system brings to mind the idea of a machine.The Post canonical system is further restricted to the “Tag” variety, described briefly below. It was shown in [1] that Tag systems are equivalent to Turing machines. The proof in [1] is very complicated and uses lemmas concerned with a variety of two-tape nonwriting Turing machines. The proof here avoids these otherwise interesting machines and strengthens the main result; obtaining the theorem with a best possible deletion number P = 2.Also, the representation of the Turing machine in the present system has a lower degree of exponentiation, which may be of significance in applications.These systems seem to be of value in establishing unsolvability of combinatorial problems.},
journal = {J. ACM},
month = {jan},
pages = {15–20},
numpages = {6}
}

@article{DEMOL200892,
title = {Tag systems and Collatz-like functions},
journal = {Theoretical Computer Science},
volume = {390},
number = {1},
pages = {92-101},
year = {2008},
issn = {0304-3975},
doi = {https://doi.org/10.1016/j.tcs.2007.10.020},
url = {https://www.sciencedirect.com/science/article/pii/S0304397507007700},
author = {Liesbeth {De Mol}},
keywords = {Tag systems, Limits of solvability and unsolvability, Universality, -problem, Collatz-like functions},
abstract = {Tag systems were invented by Emil Leon Post and proven recursively unsolvable by Marvin Minsky. These production systems have proved to be very useful in constructing small universal (Turing complete) systems for several different classes of computational systems, including Turing machines, and are thus important instruments for studying limits or boundaries of solvability and unsolvability. Although there are some results on tag systems and their limits of solvability and unsolvability, there are hardly any that consider both the shift number v and the number of symbols μ. This paper aims to contribute to research on limits of solvability and unsolvability for tag systems, taking into account these two parameters. The main result is the reduction of the 3n+1-problem to a surprisingly small tag system. It indicates that the present unsolvability line–defined in terms of μ and v–for tag systems might be significantly decreased.}
}